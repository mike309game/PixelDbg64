PixelDbg

Copyright (C) 2013 Nikita Kindt (n.kindt.pdbg@gmail.com)
All rights reserved.


1. About

PixelDbg allows you to enter or open any data stream and look at it. All data feeded to PixelDbg will be displayed in the main window with the ability to scroll through it and change
various parameters to help find or inspect images in the stream. Large unknown archives can be checked for images if they are not compressed or encrypted. Compressed or encrypted
data can be easily discovered with noise in the image (due to high entropy). Any sort of image can be produced by simply typing image data into the application.

Current features:

* Rifle through gigabytes of data visually (unknown archives, OS swap files, etc.)
* Change pixelformat, scanline, tiling, etc on the fly to find images in any data
* Visually tell if data might be compressed, encrypted or compressable
* Open any file for debugging or type/copy pixels directly into editbox
* Save current view as an image for later analysis

Current limitations:

* Maximum image resolution is 1024x1024 (larger images will look distorted due to invalid scanline stride but tiling can be used here)
* Window resize is clamped to maximum resolution
* Maximum filesize is 2^32
* Pixel format maximum is 32 bpp with no more then 8 bit per channel (i.e. valid format is 5.5.5.1 but not 9.9.9.5)
* Only forward scrolling is supported for now (while holding CTRL and moving mouse over the image an offset is calculated)
* PixelDbg was tested only on little-endian machines



2. Compile with MinGW

* Download FLTK 1.3.x and compile (in CMake choose mingw makefile).
* Execute make.bat in PixelDbg folder with the first argument being the path to extracted FLTK directory and second argument being the path to the compiled "libfltk.a".

  Example:
  make C:\Path\To\fltk C:\Path\To\fltk\bin-mingw\lib



3. Compile on Linux

* Download FLTK 1.3.x and compile (in CMake disable XDBE, XFT and XINERAMA options - if enabled -lXft and -lXinemara libs must be provided to the linker).
* Execute make.sh in PixelDbg folder with the first argument being the path to extracted FLTK directory and second argument being the path to the compiled "libfltk.a".

  Example:
  sh make.sh ./fltk ./fltk/bin-linux/lib
